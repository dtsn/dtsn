<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>dtsn</title>
 <link href="http://dtsn.me/atom.xml" rel="self"/>
 <link href="http://tdtsn.me/"/>
 <updated>2014-02-20T11:48:25+00:00</updated>
 <id>http://dtsn.me/</id>
 <author>
   <name>Daniel Saxil-Nielsen</name>
 </author>

 
 <entry>
   <title>Instagram in Tweetdeck</title>
   <link href="http://dtsn.me/2013/10/15/Instagram-in-tweetdeck/"/>
   <updated>2013-10-15T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2013/10/15/Instagram-in-tweetdeck</id>
   <content type="html">&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt; - Just released a new version which supports Instagram videos.&lt;/p&gt;

&lt;p&gt;As Instagram increases in popularity I’ve been getting more and more annoyed with the lack of support for Instagram within Tweetdeck. So i’ve decided to finally put an end to it and write a little JavaScript plugin using &lt;a href=&quot;http://tampermonkey.net/&quot;&gt;tampermonkey&lt;/a&gt; to automatically show a thumbnail for instagram URL’s. This will only currently work on web.tweetdeck.com but please feel free to modify and edit the plugin.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;/images/posts/instagram.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;View the &lt;a href=&quot;https://gist.github.com/dtsn/6866575&quot;&gt;Gist&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;c1&#39;&gt;// ==UserScript==&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// @name           TweetDeck Instagram&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// @description    Adds instagram to Tweetdeck&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// @include        https://web.tweetdeck.com/*&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// @version        0.1&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// ==/UserScript==&lt;/span&gt;

&lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;func&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;kd&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;

	&lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Instagram&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;kd&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
		&lt;span class=&#39;k&#39;&gt;this&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;links&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;[];&lt;/span&gt;
	&lt;span class=&#39;p&#39;&gt;};&lt;/span&gt;

	&lt;span class=&#39;nx&#39;&gt;Instagram&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;prototype&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;add&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;kd&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;url&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;element&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;

		&lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;k&#39;&gt;this&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;links&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;indexOf&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;url&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;!==&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;-&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;1&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
			&lt;span class=&#39;c1&#39;&gt;// already done this link&lt;/span&gt;
			&lt;span class=&#39;k&#39;&gt;return&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
		&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
		&lt;span class=&#39;k&#39;&gt;this&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;links&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;push&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;url&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;

		&lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;script&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nb&#39;&gt;document&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;createElement&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;),&lt;/span&gt;
			&lt;span class=&#39;c1&#39;&gt;// create a random callback&lt;/span&gt;
			&lt;span class=&#39;nx&#39;&gt;callback&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;instagram_&amp;#39;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;nb&#39;&gt;Math&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;floor&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;((&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;1&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;nb&#39;&gt;Math&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;random&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;())&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;*&lt;/span&gt; &lt;span class=&#39;mh&#39;&gt;0x10000&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;).&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;toString&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;16&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;).&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;substring&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;1&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;

		&lt;span class=&#39;c1&#39;&gt;// add the url&lt;/span&gt;
		&lt;span class=&#39;nx&#39;&gt;script&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;src&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;https://api.instagram.com/oembed?url=&amp;#39;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;url&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;&amp;amp;callback=&amp;#39;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;callback&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;

		&lt;span class=&#39;c1&#39;&gt;// append the script&lt;/span&gt;
		&lt;span class=&#39;nb&#39;&gt;document&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;head&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;appendChild&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;script&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;

		&lt;span class=&#39;c1&#39;&gt;// create the callback on the window object since this is annoyomoused &lt;/span&gt;
		&lt;span class=&#39;nb&#39;&gt;window&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;[&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;callback&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;]&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;kd&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;res&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
			&lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;img&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nb&#39;&gt;document&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;createElement&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;img&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
			&lt;span class=&#39;nx&#39;&gt;img&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;src&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;res&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;url&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
			&lt;span class=&#39;nx&#39;&gt;img&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;width&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;230&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
            &lt;span class=&#39;nx&#39;&gt;img&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;style&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;marginTop&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;10px&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
			&lt;span class=&#39;k&#39;&gt;this&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;insertBefore&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;img&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
		&lt;span class=&#39;p&#39;&gt;}.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;bind&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;element&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
	&lt;span class=&#39;p&#39;&gt;};&lt;/span&gt;

	
	&lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;instagram&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;new&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Instagram&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;();&lt;/span&gt;

	&lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;poll&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;kd&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
		&lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;nodes&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nb&#39;&gt;document&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
		&lt;span class=&#39;k&#39;&gt;for&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;i&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;0&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;i&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;nodes&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;length&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;i&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;++&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
			&lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;nodes&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;[&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;i&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;].&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;innerHTML&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;indexOf&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;instagram.com&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;!==&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;-&lt;/span&gt;&lt;span class=&#39;mi&#39;&gt;1&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
				&lt;span class=&#39;nx&#39;&gt;instagram&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;add&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;nodes&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;[&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;i&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;].&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;innerHTML&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;nodes&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;[&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;i&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;]);&lt;/span&gt;
			&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
		&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
	&lt;span class=&#39;p&#39;&gt;};&lt;/span&gt;

	&lt;span class=&#39;nx&#39;&gt;setInterval&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;poll&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;1000&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;};&lt;/span&gt;

&lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;script&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;nb&#39;&gt;document&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;createElement&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;script&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
&lt;span class=&#39;nx&#39;&gt;script&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;textContent&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;(&amp;quot;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;func&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;toString&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;)();&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
&lt;span class=&#39;nb&#39;&gt;document&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;body&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;appendChild&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;script&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This plugin is really simple we are first searching all the links in the page for anything which mentions &lt;code&gt;instagram&lt;/code&gt;. Once we have a link we are hitting the JSONP API of Instagram to fetch the image and insert it directly into Tweetdeck.&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;Installation&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;To install first install the browser extension &lt;a href=&quot;http://tampermonkey.net/&quot;&gt;tampermonkey&lt;/a&gt;. Once installed create a new script, copy and paste the code in above. Make sure you enable the script and there you go.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Remove Front Matter in Jekyll Includes</title>
   <link href="http://dtsn.me/2013/07/11/remove-front-matter-jekyll-plugin/"/>
   <updated>2013-07-11T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2013/07/11/remove-front-matter-jekyll-plugin</id>
   <content type="html">&lt;p&gt;I’m working on a few Jekyll plugins which use front matter in include files to define template options. The problem is that front matter isn’t automatically excluded from files in the /_include directory. So I’ve written a little plugin which will remove it from the file.&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;ruby&#39;&gt;&lt;span class=&#39;k&#39;&gt;module&lt;/span&gt; &lt;span class=&#39;nn&#39;&gt;Jekyll&lt;/span&gt;
	&lt;span class=&#39;k&#39;&gt;module&lt;/span&gt; &lt;span class=&#39;nn&#39;&gt;RemoveFrontMatterFilter&lt;/span&gt;
		&lt;span class=&#39;k&#39;&gt;def&lt;/span&gt; &lt;span class=&#39;nf&#39;&gt;removefrontmatter&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;input&lt;/span&gt;
			&lt;span class=&#39;c1&#39;&gt;# find the first&lt;/span&gt;
			&lt;span class=&#39;n&#39;&gt;first&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;input&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;index&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;
			&lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;first&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;==&lt;/span&gt; &lt;span class=&#39;kp&#39;&gt;nil&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt; 
				&lt;span class=&#39;n&#39;&gt;input&lt;/span&gt;
			&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;

			&lt;span class=&#39;c1&#39;&gt;# find the second&lt;/span&gt;
			&lt;span class=&#39;n&#39;&gt;second&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;input&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;index&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;---&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;first&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;1&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;
			&lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;second&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;==&lt;/span&gt; &lt;span class=&#39;kp&#39;&gt;nil&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;
				&lt;span class=&#39;n&#39;&gt;input&lt;/span&gt;
			&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;

			&lt;span class=&#39;c1&#39;&gt;#{}&amp;quot;First: #{first} Second: #{second}&amp;quot;&lt;/span&gt;

			&lt;span class=&#39;c1&#39;&gt;#strip the string&lt;/span&gt;
			&lt;span class=&#39;n&#39;&gt;input&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;[&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;first&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;.second&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;2&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;]&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;&amp;#39;&lt;/span&gt;
			&lt;span class=&#39;c1&#39;&gt;#return input&lt;/span&gt;
			&lt;span class=&#39;n&#39;&gt;input&lt;/span&gt;
		&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
	&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
&lt;span class=&#39;k&#39;&gt;end&lt;/span&gt;
&lt;span class=&#39;no&#39;&gt;Liquid&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;::&lt;/span&gt;&lt;span class=&#39;no&#39;&gt;Template&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;register_filter&lt;/span&gt; &lt;span class=&#39;no&#39;&gt;Jekyll&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;::&lt;/span&gt;&lt;span class=&#39;no&#39;&gt;RemoveFrontMatterFilter&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Use use it as follows:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;html&#39;&gt;{% capture includedfile %}
	{% include includedfile.html %}
{% endcapture %}
{{ includedfile | removefrontmatter }}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Downloading Data From localStorage</title>
   <link href="http://dtsn.me/2013/03/12/downloading-data-from-localstorage/"/>
   <updated>2013-03-12T00:00:00+00:00</updated>
   <id>http://tom.preston-werner.com/2013/03/12/downloading-data-from-localstorage</id>
   <content type="html">&lt;p&gt;Lately i&#39;ve been working extensively on a project which includes &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/Storage&quot;&gt;&lt;code&gt;localStorage&lt;/code&gt;&lt;/a&gt;. I hit a small problem regarding how an end user can recover
thier data from &lt;code&gt;localStorage&lt;/code&gt;. This would be useful if the user ever wanted to transfer their data to a new computer or browser.&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;Data URI&#39;s&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;I stumbled on a &lt;del&gt;very hackey&lt;/del&gt; elegant way to download the data through the use of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/data_URIs&quot;&gt;data URI&#39;s&lt;/a&gt;. These allow you to embed small files inline in documents. Give it a go below.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// create a fake object&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myData&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;s1&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;s1&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;s1&quot;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// add it to our localstorage&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;localStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// encode the data into base64&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;base64&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;btoa&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;data&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// create an a tag&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;data:application/octet-stream;base64,&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Download&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// add to the body&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p style=&quot;text-align: center&quot;&gt;
	&lt;br /&gt;
	&lt;a id=&quot;demobutton&quot; href=&quot;&quot; class=&quot;btn&quot;&gt;Give it a try!&lt;/a&gt;
	&lt;br/&gt;&lt;br/&gt;
&lt;/p&gt;

&lt;p&gt;You could easily pair this with the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/DOM/FileReader&quot;&gt;&lt;code&gt;FileReader&lt;/code&gt;&lt;/a&gt; object to read the files back in.&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot;&gt;
	var myData = {
		&#39;a&#39;: &#39;a&#39;,
		&#39;b&#39;: &#39;b&#39;,
		&#39;c&#39;: &#39;c&#39;
	};

	localStorage.setItem(&#39;data&#39;, JSON.stringify(myData));

	base64 = window.btoa(localStorage.getItem(&#39;data&#39;));

	var a = document.getElementById(&#39;demobutton&#39;);
	a.href = &#39;data:application/octet-stream;base64,&#39; + base64;
&lt;/script&gt;
</content>
 </entry>
 
 <entry>
   <title>U.S. Presidental Debates</title>
   <link href="http://dtsn.me/2012/10/25/US-presidental-election/"/>
   <updated>2012-10-25T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2012/10/25/US-presidental-election</id>
   <content type="html">&lt;p style=&#39;font-size: 14px; text-align: center;&#39;&gt;&lt;em&gt;&lt;a href=&#39;http://election.datasift.com&#39;&gt;http://election.datasift.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The us presidential election is just around the corner. in the run up to the election there is a great deal of focus on the live debates. two debates based upon a different range of topics. this is very unfamiar to us in the uk we have only recently adopted televised live debates in the 2010 election.The past three years have just flown by but it looks like its another U.S. presential election.&lt;/p&gt;

&lt;p&gt;To prove how versatile datasift can be the marketing &amp;amp; data science teams commissioned me to create something users can see the impact of the live debates on the general population through the use of Twitter.&lt;/p&gt;

&lt;p&gt;To this end we developed a micro site of datasift.com which details a variety of information we are able to gather about what people talk about around the elections and make predictions on how we think people will vote. We are able to do this even down to a city level.&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;Node == real time&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;The major requirement of the site was to display the information we gather live to the user as the debates are happening. We are able to do this using Node.js and a client based websocket connection. This is the first time I have used node.js in production, it worked very well and managed to stay up dispite both a large number of requests and a large amount of data to be processed from DataSift.&lt;/p&gt;

&lt;p&gt;The graphs and visualisations where written with the help of D3.js a fantastic framework which helps with the manipulation of SVG elements which in turn allows us to customise the design.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;election.datasift.com&#39; class=&#39;last&#39; src=&#39;/images/posts/election.png&#39; /&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Arrow - Data Visualisation</title>
   <link href="http://dtsn.me/2012/10/04/Arrow/"/>
   <updated>2012-10-04T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2012/10/04/Arrow</id>
   <content type="html">&lt;p&gt;&lt;img class=&#39;last&#39; src=&#39;/images/posts/arrow.png&#39; /&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Wikistats</title>
   <link href="http://dtsn.me/2012/08/28/Wikistats/"/>
   <updated>2012-08-28T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2012/08/28/Wikistats</id>
   <content type="html">&lt;p style=&#39;font-size: 14px;&#39;&gt;&lt;em&gt;&lt;a href=&#39;http://wikistats.co&#39;&gt;http://wikistats.co&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Wikistats was an orignal concept first created by @lorenzoalberton to track the number of Wikipedia edits which are happening, from this you are able to deduce the most edited item in a day and therefore be able to work out the most popular. It works really well for breaking news stories.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;wikistats.co&#39; class=&#39;last&#39; src=&#39;/images/posts/wikistats.png&#39; /&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Like Coffee?</title>
   <link href="http://dtsn.me/2012/07/17/Like-Coffee/"/>
   <updated>2012-07-17T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2012/07/17/Like-Coffee</id>
   <content type="html">&lt;p style=&#39;font-size: 14px;&#39;&gt;&lt;em&gt;&lt;a href=&#39;http://demo.datasift.com/coffee/&#39;&gt;http://demo.datasift.com/coffee/&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This must be a worlds first, a live infographic giving you realtime updates of the demographics of people who like coffee. Created using PHP and JavaScript.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;http://demo.datasift.com/coffee/m&#39; class=&#39;last&#39; src=&#39;/images/posts/coffee.png&#39; /&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>The Sound of Twitter</title>
   <link href="http://dtsn.me/2012/02/28/sound-of-twitter/"/>
   <updated>2012-02-28T00:00:00+00:00</updated>
   <id>http://tom.preston-werner.com/2012/02/28/sound-of-twitter</id>
   <content type="html">&lt;p&gt;Twitter is based solely around sending text based messages to each other. However what if we could change this and interpret the text as sound?&lt;/p&gt;

&lt;p&gt;This thought inspired our latest hack-a-thon project. Alongside &lt;a href=&#39;http://twitter.com/maxtillich&#39;&gt;@maxtillich&lt;/a&gt; and &lt;a href=&#39;http://twitter.com/aguming&#39;&gt;@aguming&lt;/a&gt;. We decided to use &lt;a href=&#39;http://datasift.com&#39;&gt;DataSift&lt;/a&gt; to measure the sentiment of users and assign sounds based on how happy or sad a user is.&lt;/p&gt;
&lt;h3&gt;&lt;span&gt;HTML5 Audio&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;I’ve been itching to use the new &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; tag in HTML5 and it’s finally gotten support in most of the major browsers. Using &lt;a href=&#39;http://twitter.com/aguming&#39;&gt;@aguming&lt;/a&gt; music skills we created 12 different sounds to reflect each of the different moods we can determine. We then listen into DataSift and measure the average sentiment every 500 milliseconds and play the correct sound.&lt;/p&gt;

&lt;p&gt;What we get is a slightly surreal experience of how twitter sounds.&lt;/p&gt;

&lt;p&gt;What we have produced was about 24 hours of work, and made a brief introduction to the sound of Twitter.&lt;/p&gt;
&lt;div class=&#39;video&#39;&gt;
&lt;iframe frameborder=&#39;0&#39; height=&#39;360&#39; src=&#39;https://www.youtube.com/embed/z1glJZZCEUQ?rel=0&#39; width=&#39;640&#39;&gt; &lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;This project is available on &lt;a href=&#39;https://github.com/datasift/Sound-of-Twitter&#39;&gt;Github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;UPDATE - &lt;a href=&#39;http://thelisteningmachine.org/&#39;&gt;The Listening Machine&lt;/a&gt; explores this idea more fully but is not associated with this project.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>DataSift Movies</title>
   <link href="http://dtsn.me/2012/01/20/DataSift-Movies/"/>
   <updated>2012-01-20T00:00:00+00:00</updated>
   <id>http://tom.preston-werner.com/2012/01/20/DataSift-Movies</id>
   <content type="html">&lt;p&gt;Do you remember &lt;a href=&#39;http://fflick.com&#39;&gt;fflick&lt;/a&gt;? Probably not, it was a start up brought by google for a $10 million price tag a couple of years going. What fflick did was to basically gather users movie reviews across social movies. For this hackathon we decided to do the same, but using the power of DataSift we are able to gather information and give them a score.&lt;/p&gt;

&lt;p&gt;We managed to produce a movie review site that crowd source all it’s reviews and gave each movie a score based upon user sentiment to films and the split between male and female.&lt;/p&gt;

&lt;p&gt;Unfortunately DataSift Movies was never made available to the public.&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;DataSift Movies&#39; class=&#39;last&#39; src=&#39;/images/posts/dsmovies.png&#39; /&gt;&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>CSS3 Selectors :last-child</title>
   <link href="http://dtsn.me/2009/12/15/css3-selectors-last-child/"/>
   <updated>2009-12-15T00:00:00+00:00</updated>
   <id>http://tom.preston-werner.com/2009/12/15/css3-selectors-last-child</id>
   <content type="html">&lt;p&gt;Of all the &lt;a href=&quot;http://web.archive.org/web/20080503011837/http://www.w3.org/TR/css3-selectors/&quot;&gt;CSS3 selectors&lt;/a&gt; the structural pseudo-classes have to be my favourite. In particular I love :last-child selector, the :last-child CSS selector is incredibly powerful especially when positioning elements in a row, I am currently finding it incredibly useful when doing menus. Instead of providing a last class on the very last element in the row, you can now use pure CSS to achieve the same effect.&lt;/p&gt;  &lt;h3&gt;CSS 2.1&lt;/h3&gt;  

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;o&quot;&gt;/*&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;Each&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.image&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;/*&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;remove&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;margin&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;last&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;so&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;lines&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;up&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.image.last&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream
&lt;h3&gt;&lt;span&gt;CSS 3&lt;/span&gt;&lt;/h3&gt;
=======
&lt;h3&gt;CSS 3&lt;/h3&gt;
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Stashed changes

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;c&quot;&gt;/* parent of the image element */&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.parent&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:last-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;margin-right&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;The Downside&lt;/h3&gt;

&lt;p&gt;Unfortunately the bad aspect of this selector is that it does not fail gracefully. Meaning that a user in a none CSS3 compliant browser, &lt;strong&gt;(IE)&lt;/strong&gt;, it would fail horribly, this means that everything will be out of line.&lt;/p&gt;

&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream
&lt;h3&gt;&lt;span&gt;Example&lt;/span&gt;&lt;/h3&gt;
=======
&lt;h3&gt;Example&lt;/h3&gt;
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Stashed changes

&lt;p&gt;If you look at this in anything but a browser which supports CSS3 the last element won&#39;t be red.&lt;/p&gt;
&lt;style type=&quot;text/css&quot;&gt;
.example { margin-right: 6px; height: 20px; width: 75px; float:left; background-color: #317b9e; }
.example-block { overflow: hidden; margin-bottom: 10px; }
.example-block div:last-child { background: red; }&lt;/style&gt;

&lt;div class=&quot;example-block&quot;&gt;
  &lt;div class=&quot;example&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;example&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;example&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;example&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;example&quot;&gt;&lt;/div&gt;
  &lt;div class=&quot;example&quot;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;h3&gt;More Resources&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.w3.org/TR/css3-selectors/&quot;&gt;W3C Selectors Level 3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.css3.info/modules/selector-compat/&quot;&gt;CSS3 Compatibility Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/cc351024%28VS.85%29.aspx&quot;&gt;MSDN Compatibility Table (tells you what works in IE8)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.smashingmagazine.com/2009/06/15/take-your-design-to-the-next-level-with-css3/&quot;&gt;Take Your Design To The Next Level With CSS3&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
 </entry>
 
 <entry>
   <title>JSON(P) Stacking</title>
   <link href="http://dtsn.me/2009/12/06/jsonp-stacking/"/>
   <updated>2009-12-06T00:00:00+00:00</updated>
   <id>http://tom.preston-werner.com/2009/12/06/jsonp-stacking</id>
   <content type="html">&lt;p&gt;JSONP was proposed as grabbing data from external domains avoiding the cross script scripting limitations (see this &lt;a href=&quot;http://ajaxian.com/archives/jsonp-json-with-padding&quot;&gt;Ajaxian article&lt;/a&gt; for more information). It requires a call to an external API where you specificy the a callback function, you do this through the use of script tag. For example:&lt;/p&gt;  

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://yourdomain.com/api?callback=myfunction&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When the script tag has been loaded your function would be called with the JSON data, like so.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;myfunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;some JSON data&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However you become reliant on that external service to always be available, if for any reason that service goes down you wouldn’t get any data and your page would be likely to hang.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Therefore I propose a system of JSONP stacking, quite simply you stack up your JSON requests if you don’t receive a response in a set time it will stop the request.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This can be easily achieved by having the following function:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// callback function&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// success flag&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JSONPStacking&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// create the element&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// set the source&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;amp;amp;callback=callback&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// render the element&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// start the counter, this one last for 5 seconds&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;// remove the element&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removeChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// say the data has been received&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;_s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// call the callback with the data&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;_c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Basically what we are doing here is to create a normal JSONP request by creating a script tag and loading it into the body. However we are overriding the standard callback function with our own one, &lt;em&gt;callback. &lt;/em&gt;When the request succeeds this will call that function with the data and in turn we call our success function. If 5 seconds have past the timeout will trigger, see if the success flag has been set if not it will remove the element from the DOM thereby stopping the request.&lt;/p&gt;

&lt;p&gt;That&#39;s it, it is a really simple principle but will hopefully stop your site from hanging on long request, such as for the Twitter widget. It will also make your widgets that you build a lot more stable and won&#39;t overload your site.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>JavaScript Weather</title>
   <link href="http://dtsn.me/2009/11/26/javascript-weather/"/>
   <updated>2009-11-26T00:00:00+00:00</updated>
   <id>http://tom.preston-werner.com/2009/11/26/javascript-weather</id>
   <content type="html">&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream
&lt;p&gt;Here’s a crazy idea, what would you do if you wanted to change the background picture of your website so it matches the weather. Luckily Its really easy, and I figured out all the hard bits for you.&lt;/p&gt;  &lt;p&gt;&lt;em&gt;UPDATE - Chris Heilmann over at the &lt;/em&gt;&lt;a href=&quot;http://developer.yahoo.net/blog/archives/2009/12/extending_the_weather_api_with_yql.html&quot;&gt;&lt;em&gt;Yahoo! Developer Network Blog&lt;/em&gt;&lt;/a&gt;&lt;em&gt; has made this even simpler through the use of YQL.&lt;/em&gt;&lt;/p&gt;  &lt;h3&gt;&lt;span&gt;The Data&lt;/span&gt;&lt;/h3&gt;  &lt;p&gt;First of all we need a data source which will provide the weather for a particular location, we can grab this from the &lt;a href=&quot;http://developer.yahoo.com/weather/&quot;&gt;Yahoo Weather API&lt;/a&gt;. Using the code UKXX0117 which is for Reading, UK I can create the an RSS feed which you can see here &lt;a title=&quot;http://weather.yahooapis.com/forecastrss?p=UKXX0117&amp;amp;u=c&quot; href=&quot;http://weather.yahooapis.com/forecastrss?p=UKXX0117&amp;amp;u=c&quot;&gt;http://weather.yahooapis.com/forecastrss?p=UKXX0117&amp;amp;u=c&lt;/a&gt;. Great but how can we process this RSS feed? That’s where &lt;a href=&quot;http://pipes.yahoo.com&quot;&gt;Yahoo Pipes&lt;/a&gt; comes in, we can take in the RSS feed extract the data we need (item.yweather.condition) and export it as JSON.&lt;/p&gt; &lt;p&gt;Now we can access the JSON data for the weather in Reading &lt;a href=&quot;http://pipes.yahoo.com/pipes/pipe.run?_id=b13966505cb6b00dd1d18ec4aafc14b4&amp;amp;_render=json&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;  &lt;h3&gt;&lt;span&gt;JavaScript&lt;/span&gt;&lt;/h3&gt;  &lt;p&gt;The JavaScript cannot directly call the JSON script via AJAX due to cross site scripting limitations imposed by the browser. This is where JSONP comes in, JSONP is a way to retrieve data from external domains through wrapping the JSON in a function, you can read more on JSONP at &lt;a href=&quot;http://bob.pythonmac.org/archives/2005/12/05/remote-json-jsonp/&quot;&gt;from__future__import&lt;/a&gt;. Yahoo Pipes fully supports the JSONP format using the parameter callback, therefore in our webpage we load up the following.&lt;/p&gt;  
=======
&lt;p&gt;Here’s a crazy idea, what would you do if you wanted to change the background picture of your website so it matches the weather. Luckily Its really easy, and I figured out all the hard bits for you.&lt;/p&gt;  &lt;p&gt;&lt;em&gt;UPDATE - Chris Heilmann over at the &lt;/em&gt;&lt;a href=&quot;http://developer.yahoo.net/blog/archives/2009/12/extending_the_weather_api_with_yql.html&quot;&gt;&lt;em&gt;Yahoo! Developer Network Blog&lt;/em&gt;&lt;/a&gt;&lt;em&gt; has made this even simpler through the use of YQL.&lt;/em&gt;&lt;/p&gt;  &lt;h2&gt;The Data&lt;/h2&gt;  &lt;p&gt;First of all we need a data source which will provide the weather for a particular location, we can grab this from the &lt;a href=&quot;http://developer.yahoo.com/weather/&quot;&gt;Yahoo Weather API&lt;/a&gt;. Using the code UKXX0117 which is for Reading, UK I can create the an RSS feed which you can see here &lt;a title=&quot;http://weather.yahooapis.com/forecastrss?p=UKXX0117&amp;amp;u=c&quot; href=&quot;http://weather.yahooapis.com/forecastrss?p=UKXX0117&amp;amp;u=c&quot;&gt;http://weather.yahooapis.com/forecastrss?p=UKXX0117&amp;amp;u=c&lt;/a&gt;. Great but how can we process this RSS feed? That’s where &lt;a href=&quot;http://pipes.yahoo.com&quot;&gt;Yahoo Pipes&lt;/a&gt; comes in, we can take in the RSS feed extract the data we need (item.yweather.condition) and export it as JSON.&lt;/p&gt; &lt;p&gt;Now we can access the JSON data for the weather in Reading &lt;a href=&quot;http://pipes.yahoo.com/pipes/pipe.run?_id=b13966505cb6b00dd1d18ec4aafc14b4&amp;amp;_render=json&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;  &lt;h2&gt;JavaScript&lt;/h2&gt;  &lt;p&gt;The JavaScript cannot directly call the JSON script via AJAX due to cross site scripting limitations imposed by the browser. This is where JSONP comes in, JSONP is a way to retrieve data from external domains through wrapping the JSON in a function, you can read more on JSONP at &lt;a href=&quot;http://bob.pythonmac.org/archives/2005/12/05/remote-json-jsonp/&quot;&gt;from__future__import&lt;/a&gt;. Yahoo Pipes fully supports the JSONP format using the parameter callback, therefore in our webpage we load up the following.&lt;/p&gt;  
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Stashed changes

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://pipes.yahoo.com/pipes/pipe.run?_id=b13966505cb6b00dd1d18ec4aafc14b4&amp;amp;_render=json&amp;amp;_callback=weather&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will call the function weather passing through a weather status code as the parameter.&lt;/p&gt;

&lt;p&gt;That is really it, you can do whatever you want with the data, here’s a quick example of how I would use it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;weather&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;32&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addClassName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;sunny&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;	
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Feature in Wired (UK)</title>
   <link href="http://dtsn.me/2009/11/04/im-in-wired/"/>
   <updated>2009-11-04T00:00:00+00:00</updated>
   <id>http://tom.preston-werner.com/2009/11/04/im-in-wired</id>
   <content type="html">&lt;p&gt;At the end of September I was invited to a shoot for the UK edition of Wired. It was a shoot based around the twitterati of the UK and included some big names like Iain Dodsworth. The shoot was based at the old BT museum, which became defunct when their archive went online. You can see me and the other 24 people in Wired’s December Issue, on sale from today.&lt;/p&gt; 

&lt;img class=&quot;last&quot; src=&quot;http://img.wired.co.uk.s3.amazonaws.com/674x281/s_v/twitter674.jpg&quot; width=&quot;480&quot; height=&quot;200&quot; /&gt;
</content>
 </entry>
 
 <entry>
   <title>Building JavaScript Widgets</title>
   <link href="http://dtsn.me/2009/03/15/building-javascript-widgets/"/>
   <updated>2009-03-15T00:00:00+00:00</updated>
   <id>http://tom.preston-werner.com/2009/03/15/building-javascript-widgets</id>
   <content type="html">&lt;p&gt;Little pieces of JavaScript you embed onto your website are getting more popular. Every major provider of a service on the web also gives you a little widget that you can put on your blog or webpage to promote what you are doing, for example &lt;a href=&quot;http://twitter.com/widgets&quot; target=&quot;_blank&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;http://www.last.fm/widgets&quot; target=&quot;_blank&quot;&gt;Last FM&lt;/a&gt; and &lt;a href=&quot;http://digg.com/add-digg&quot; target=&quot;_blank&quot;&gt;Digg&lt;/a&gt; all provide widgets which are great for you and great for the service.&lt;/p&gt;
&lt;p&gt;I am going to talk you through the development and pitfalls associated with the design and development of widgets. &lt;/p&gt;
&lt;p&gt;First and foremost, you need to decide what you want to show with your widget. Knowing this you can make an educated choice about which method you want to use to create a widget, there are basically two methods associated with widget development.&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;IFrame’s&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;No, iframe’s aren’t dead. They are a major part of widget development. Using a &lt;code&gt;iframe&lt;/code&gt; is the easiest way to generate a widget - you host a small file on your web site which contains the information you want to show, like the &lt;a href=&quot;http://digg.com/tools/diggthis.php?u=http%3A//hehe2.net/linux-general/linuxcom-to-bring-social-web-to-linux-geeks/&amp;amp;t=Linux.com%20to%20Bring%20%u201CSocial%20Web%u201D%20To%20Linux%20Geeks%3F&quot; target=&quot;_blank&quot;&gt;Digg button&lt;/a&gt; for example, and get the JavaScript on the client side to build the URL to it. In the case of Digg the client side JavaScript builds a URL based on the current posts URL.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;iframe src=&amp;quot;http://yoururl&amp;quot; width=&amp;quot;50&amp;quot; height=&amp;quot;50&amp;quot;&amp;gt;&amp;lt;/iframe&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To install the widget all you have to do is to point the user at your bit of JavaScript:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://yoururl/script.js&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can pass any variables you want through to the user at this point by simply making them JavaScript variables, and using the JavaScript to build up the &lt;code&gt;iframe&lt;/code&gt; URL based on these variables.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;hello world&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;http://yoururl/script.js&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you want your widget to be able to appear multiple times on the same webpage, you need to remember to set all the variables to &lt;code&gt;null&lt;/code&gt; at the end of your JavaScript file.&lt;/p&gt;
&lt;p&gt;That&#39;s it! &lt;code&gt;iframe&lt;/code&gt; based widgets are very easy to build and to use, however they do come with their downsides. The biggest of these is that the user can&#39;t customise the widget at all - it lives within an &lt;code&gt;iframe&lt;/code&gt; and therefore is untouchable by CSS. That&#39;s why certain widgets, like the twitter widget, which are made entirely on the client side in JavaScript.&lt;/p&gt;

&lt;h3&gt;&lt;span&gt;Client Side&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;A widget that is built in JavaScript on the client side is definitely the harder option. For this you have to make the JavaScript file create all the HTML, write out a basic style to apply to the HTML and load in the data. When building this try to avoid using frameworks to build the HTML, this only creates more request for your web servers and make the widget slower to load. Instead resort to using the classical JavaScript methods for creating elements.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&amp;lt;div id=&amp;quot;your_id&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;widget&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;you_id&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;widget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You will have to load your data in from another source, and for this I recommend extending your API to give you a JavaScript variable followed by the JSON encoded data. Here&#39;s an example from &lt;a href=&quot;http://api.tweetmeme.com/popular.js?count=5&amp;amp;category=all&quot; target=&quot;_blank&quot;&gt;tweetmeme&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Pitfalls&lt;/h3&gt;
&lt;p&gt;There are a lot of difficulties involved in creating widgets and here are just a few of them:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;AJAX won’t work! You cannot post information between domains. &lt;/li&gt;
	&lt;li&gt;Don’t use a JavaScript framework - for a simple widget it’s is over kill. &lt;/li&gt;
	&lt;li&gt;Try to keep the requests down. These widgets are coming from your servers. &lt;/li&gt;
	&lt;li&gt;Anonymise the JavaScript, you don’t want it conflicting with other JavaScript. &lt;/li&gt;
	&lt;li&gt;Minimize your JavaScript. This will save on bandwidth for you, and make the widget faster to load.&amp;#160; &lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Script.aculo.us Transitions</title>
   <link href="http://dtsn.me/2009/03/08/script.aculo.us-transitions/"/>
   <updated>2009-03-08T00:00:00+00:00</updated>
   <id>http://tom.preston-werner.com/2009/03/08/script.aculo.us-transitions</id>
   <content type="html">&lt;p&gt;I’ve been digging through the &lt;a href=&quot;http://script.aculo.us/&quot;&gt;Script.aculo.us&lt;/a&gt; code a lot recently and have stumbled upon a number of very effective transitions which aren’t used widely. There are 9 effects in total comprising of:&lt;/p&gt;

&lt;ul&gt;
	&lt;li&gt;Transition&lt;/li&gt;
	&lt;li&gt;Linear&lt;/li&gt;
	&lt;li&gt;Reverse&lt;/li&gt;
	&lt;li&gt;Flicker&lt;/li&gt;
	&lt;li&gt;Wobble&lt;/li&gt;
	&lt;li&gt;Pulse&lt;/li&gt;
	&lt;li&gt;Spring&lt;/li&gt;
	&lt;li&gt;None&lt;/li&gt;
	&lt;li&gt;Full&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can see a full demo of all the the effects on the &lt;a href=&quot;http://github.com/madrobby/scriptaculous/wikis/effect-transitions&quot;&gt;Script.aculo.us Wiki&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All of Script.aculo.us’s effects will take a transition in the options array. For example we could apply a spring transition to our scroll to effect.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Super CSS, the power of the selector</title>
   <link href="http://dtsn.me/2008/10/15/super-css-the-power-of-the-selector/"/>
   <updated>2008-10-15T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2008/10/15/super-css-the-power-of-the-selector</id>
   <content type="html">&lt;p&gt;We all love CSS it’s fundamental to the web. However most of us do not use the full power of CSS. A quick rummage around the W3C specification and you will see how powerful CSS can really be. I’m talking about the CSS selector, sure we all use the basic selectors, but what about the more complicated ones.&lt;/p&gt;
&lt;p&gt;Well here’s my guide to the most useful not very used CSS selectors (as well as what they are currently supported in).&lt;/p&gt;
&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream
&lt;h3&gt;&lt;span&gt;CSS2&lt;/span&gt;&lt;/h3&gt;
=======
&lt;h3&gt;CSS2&lt;/h3&gt;
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Stashed changes
&lt;table class=&quot;table&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; border=&quot;0&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th width=&quot;140&quot;&gt;Pattern&lt;/th&gt;
&lt;th width=&quot;360&quot;&gt;Meaning&lt;/th&gt;
&lt;th width=&quot;10&quot;&gt;IE6&lt;/th&gt;
&lt;th width=&quot;10&quot;&gt;IE7&lt;/th&gt;
&lt;th width=&quot;10&quot;&gt;FF&lt;/th&gt;
&lt;th width=&quot;10&quot;&gt;SF&lt;/th&gt;
&lt;th width=&quot;10&quot;&gt;OP&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E &amp;gt; F&lt;/td&gt;
&lt;td&gt;Matches any F element that is a child of an element E.&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10007;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E:first-child&lt;/td&gt;
&lt;td&gt;Matches element E when E is the first child of its parent. &lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10007;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E:link          &lt;br /&gt;E:visited &lt;/td&gt;
&lt;td&gt;Matches element E if E is the source anchor of a hyperlink of which the target is not yet visited (:link) or already visited (:visited). &lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E:active          &lt;br /&gt;E:hover           &lt;br /&gt;E:focus &lt;/td&gt;
&lt;td&gt;Matches E during certain user actions. &lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E + F&lt;/td&gt;
&lt;td&gt;Matches any F element immediately preceded by an element E.&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10007;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E[foo]&lt;/td&gt;
&lt;td&gt;Matches any E element with the &quot;foo&quot; attribute set (whatever the value). &lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10007;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E[foo=&quot;warning&quot;]&lt;/td&gt;
&lt;td&gt;Matches any E element whose &quot;foo&quot; attribute value is exactly equal to &quot;warning&quot;. &lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10007;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&quot;last&quot;&gt;
&lt;td&gt;E[foo~=&quot;warning&quot;]&lt;/td&gt;
&lt;td&gt;Matches any E element whose &quot;foo&quot; attribute value is a list of space-separated values, one of which is exactly equal to &quot;warning&quot;. &lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10007;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;&lt;span&gt;CSS3&lt;/span&gt;&lt;/h3&gt;
&lt;table class=&quot;table&quot; width=&quot;480&quot; border=&quot;0&quot;&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;th width=&quot;140&quot;&gt;Pattern&lt;/th&gt;
&lt;th width=&quot;360&quot;&gt;Meaning&lt;/th&gt;
&lt;th width=&quot;10&quot;&gt;IE6&lt;/th&gt;
&lt;th width=&quot;10&quot;&gt;IE7&lt;/th&gt;
&lt;th width=&quot;10&quot;&gt;FF&lt;/th&gt;
&lt;th width=&quot;10&quot;&gt;SF&lt;/th&gt;
&lt;th width=&quot;10&quot;&gt;OP&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E ~ F&lt;/td&gt;
&lt;td&gt;Matches any F element preceded by an element E.&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10007;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10007;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E:empty&lt;/td&gt;
&lt;td&gt;Matches element E where E has no children, including text nodes&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10007;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10003;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;nbsp;&lt;/td&gt;
&lt;td class=&quot;center&quot;&gt;&amp;#10007;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;If you need a detailed walkthrough on how these selectors work, please refer to the &lt;a href=&quot;http://www.w3.org/TR/css3-selectors/&quot;&gt;W3C Specification on CSS3 Selectors&lt;/a&gt; (which includes all the CSS2 selectors).&lt;/p&gt;
&lt;h3&gt;A Couple of Examples&lt;/h3&gt;
&lt;p&gt;I couldn’t just give all these CSS selectors without giving you some great examples of how they can be used.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;E:first-child/E:last-child – &lt;/strong&gt;You have a &lt;em&gt;ul&lt;/em&gt; list of elements which you float horizontally. With first child and last child you can easily set the margins for the first and last child different from the remaining items:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;list-style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;float&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:first-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;ul&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;li&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:last-child&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;margin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;E:empty – &lt;/strong&gt;You may have a situation where you have an empty paragraph. Paragraphs will always have a margin top and a margin bottom, which could look unsightly. So lets remove it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;:empty&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>If the web was smaller</title>
   <link href="http://dtsn.me/2008/07/05/if-the-web-was-smaller-idea/"/>
   <updated>2008-07-05T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2008/07/05/if-the-web-was-smaller-idea</id>
   <content type="html">&lt;p&gt;I’ve just had this crazy idea, what would happen if all the &lt;em&gt;&amp;lt;div&amp;gt;&lt;/em&gt; tags in the world were converted into &lt;em&gt;&amp;lt;d&amp;gt;&lt;/em&gt; tags. Image how much space it would save, well you don’t need to imagine I have broken out my calculator and worked it all out.&lt;/p&gt;

&lt;p&gt;Taking the top 5 website&#39;s from &lt;a href=&quot;http://www.alexa.com/site/ds/top_sites?ts_mode=global&amp;amp;lang=none&quot;&gt;Alexa&lt;/a&gt;:&lt;/p&gt;  &lt;table cellspacing=&quot;0&quot; cellpadding=&quot;2&quot; width=&quot;492&quot; border=&quot;0&quot;&gt;&lt;tbody&gt;     &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;100&quot;&gt;&lt;strong&gt;Website&lt;/strong&gt;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;180&quot;&gt;&lt;strong&gt;Number of &amp;lt;div&amp;gt; Elements&lt;/strong&gt;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;44&quot;&gt;&lt;strong&gt;Size&lt;/strong&gt;&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;166&quot;&gt;&lt;strong&gt;Size when &amp;lt;div&amp;gt; = &amp;lt;d&amp;gt;&lt;/strong&gt;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;99&quot;&gt;Yahoo.com&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;180&quot;&gt;85&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;44&quot;&gt;153Kb&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;166&quot;&gt;152Kb&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;98&quot;&gt;Google.com&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;180&quot;&gt;6&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;44&quot;&gt;7.5Kb&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;166&quot;&gt;7.5Kb&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;99&quot;&gt;Youtube.com&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;180&quot;&gt;377&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;44&quot;&gt;76.8Kb&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;166&quot;&gt;75.3Kb&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;99&quot;&gt;Live.com&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;180&quot;&gt;27&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;44&quot;&gt;18.6Kb&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;166&quot;&gt;18.5Kb&lt;/td&gt;     &lt;/tr&gt;      &lt;tr&gt;       &lt;td valign=&quot;top&quot; width=&quot;99&quot;&gt;MSN.com&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;180&quot;&gt;140&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;44&quot;&gt;48.9Kb&lt;/td&gt;        &lt;td valign=&quot;top&quot; width=&quot;166&quot;&gt;48.3Kb&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt;&lt;/table&gt; 
 &lt;p&gt;For every element that would be converted to a &lt;em&gt;&amp;lt;d&amp;gt;,&lt;/em&gt; on average 5.93 bytes are saved. Considering that a typically website has 127 &lt;em&gt;&amp;lt;div&amp;gt;&lt;/em&gt; elements, taking from the average of the top 5 website&#39;s, this will create a saving of 0.753Kb per web page. That might not seem like a lot but added together across all the website&#39;s imagine how much time it would save.&lt;/p&gt;  

 &lt;p&gt;Of course this is just pie in the sky, but if the W3C thought of shrinking the HTML tags we use, website&#39;s would load faster, and every millisecond counts. Hopefully this will cause some debate on why HTML elements are longer than they need to be.&lt;/p&gt;  &lt;p&gt;I am only suggesting the HTML tags div and span since they convey no semantical meaning, unlike elements like p.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>JavaScript in CSS, Ugly But Interesting</title>
   <link href="http://dtsn.me/2008/05/12/javascript-in-css-ugly-but-intresting/"/>
   <updated>2008-05-12T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/2008/05/12/javascript-in-css-ugly-but-intresting</id>
   <content type="html">&lt;p&gt;There is a very little used and unknown method which allows you to utilise JavaScript within a CSS file. The CSS Expression property allows you to assign a JavaScript expression to a CSS property. For example, this allows you to set the position of an element according to the browser size.&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;nx&#39;&gt;width&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;expression&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nb&#39;&gt;document&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;body&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;clientWidth&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;950&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;?&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;950px&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;100%&amp;quot;&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Do not use CSS Expression, they are unreliable, slow and are only supported in IE!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;CSS Expression suddenly came to me as a solution for the currently much debated feature &lt;a href=&quot;http://www.dave-woods.co.uk/index.php/css-variables/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://www.css3.info/new-features-proposed-for-css/&quot;&gt;here&lt;/a&gt; of &lt;a href=&quot;http://disruptive-innovations.com/zoo/cssvariables/&quot;&gt;variables&lt;/a&gt; in CSS3. This could theoretically be currently achieved through the use of CSS Expressions.&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;kd&#39;&gt;function&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;blue&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;()&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
	&lt;span class=&#39;k&#39;&gt;return&lt;/span&gt; &lt;span class=&#39;s1&#39;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;css&#39;&gt;&lt;span class=&#39;nt&#39;&gt;body&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;background&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;expression&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nb&#39;&gt;blue&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;());&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;CSS Expressions are horrible and unsupported, so please don’t use them in development. They do, however, highlight a interesting and little known feature of CSS.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Prototype Element.Insert</title>
   <link href="http://dtsn.me/hello,/world/2008/05/01/elementinsert-javascript/"/>
   <updated>2008-05-01T00:00:00+01:00</updated>
   <id>http://tom.preston-werner.com/hello,/world/2008/05/01/elementinsert-javascript</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.prototypejs.org&quot;&gt;Prototype&lt;/a&gt; has a very useful function which is not well documented, &lt;a href=&quot;http://www.prototypejs.org/api/element/insert&quot;&gt;Element.inset&lt;/a&gt;. Element.insert is a very powerful prototype function which lets you insert a element in one of 4 positions, &lt;em&gt;before, after, top, bottom&lt;/em&gt; of an element.&lt;/p&gt;

&lt;p&gt;If we wanted to insert an element after a element we would use this code:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;nx&#39;&gt;Element&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;insert&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;first&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;-&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;element&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
	&lt;span class=&#39;nx&#39;&gt;top&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;content&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Expanding this further:&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;c1&#39;&gt;// lets create our element&lt;/span&gt;
&lt;span class=&#39;kd&#39;&gt;var&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;dummy&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;new&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;Element&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;).&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;update&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;);&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// add the element&lt;/span&gt;
&lt;span class=&#39;nx&#39;&gt;Element&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;insert&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;nx&#39;&gt;$&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s1&#39;&gt;&amp;#39;hook&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;),&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
	&lt;span class=&#39;nx&#39;&gt;after&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;nx&#39;&gt;dummy&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;});&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;em&gt;Where hook is the element we want before our created element&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This code will add our Hello World text after the div with the id of hook.&lt;/p&gt;</content>
 </entry>
 
 
</feed>